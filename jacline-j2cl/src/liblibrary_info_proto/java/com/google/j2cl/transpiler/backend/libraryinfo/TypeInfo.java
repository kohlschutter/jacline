// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transpiler/java/com/google/j2cl/transpiler/backend/libraryinfo/library_info.proto

package com.google.j2cl.transpiler.backend.libraryinfo;

/**
 * Protobuf type {@code j2cl.TypeInfo}
 */
public final class TypeInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:j2cl.TypeInfo)
    TypeInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TypeInfo.newBuilder() to construct.
  private TypeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TypeInfo() {
    implementsType_ = emptyIntList();
    member_ = java.util.Collections.emptyList();
    headerSourceFilePath_ = "";
    implSourceFilePath_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TypeInfo();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TypeInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            typeId_ = input.readInt32();
            break;
          }
          case 16: {

            extendsType_ = input.readInt32();
            break;
          }
          case 24: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              implementsType_ = newIntList();
              mutable_bitField0_ |= 0x00000001;
            }
            implementsType_.addInt(input.readInt32());
            break;
          }
          case 26: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
              implementsType_ = newIntList();
              mutable_bitField0_ |= 0x00000001;
            }
            while (input.getBytesUntilLimit() > 0) {
              implementsType_.addInt(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              member_ = new java.util.ArrayList<com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo>();
              mutable_bitField0_ |= 0x00000002;
            }
            member_.add(
                input.readMessage(com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo.parser(), extensionRegistry));
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            headerSourceFilePath_ = s;
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            implSourceFilePath_ = s;
            break;
          }
          case 56: {

            jstypeInterface_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        implementsType_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        member_ = java.util.Collections.unmodifiableList(member_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.j2cl.transpiler.backend.libraryinfo.LibraryInfoOuterClass.internal_static_j2cl_TypeInfo_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.j2cl.transpiler.backend.libraryinfo.LibraryInfoOuterClass.internal_static_j2cl_TypeInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo.class, com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo.Builder.class);
  }

  public static final int TYPE_ID_FIELD_NUMBER = 1;
  private int typeId_;
  /**
   * <code>int32 type_id = 1;</code>
   * @return The typeId.
   */
  @java.lang.Override
  public int getTypeId() {
    return typeId_;
  }

  public static final int EXTENDS_TYPE_FIELD_NUMBER = 2;
  private int extendsType_;
  /**
   * <code>int32 extends_type = 2;</code>
   * @return The extendsType.
   */
  @java.lang.Override
  public int getExtendsType() {
    return extendsType_;
  }

  public static final int IMPLEMENTS_TYPE_FIELD_NUMBER = 3;
  private com.google.protobuf.Internal.IntList implementsType_;
  /**
   * <code>repeated int32 implements_type = 3;</code>
   * @return A list containing the implementsType.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getImplementsTypeList() {
    return implementsType_;
  }
  /**
   * <code>repeated int32 implements_type = 3;</code>
   * @return The count of implementsType.
   */
  public int getImplementsTypeCount() {
    return implementsType_.size();
  }
  /**
   * <code>repeated int32 implements_type = 3;</code>
   * @param index The index of the element to return.
   * @return The implementsType at the given index.
   */
  public int getImplementsType(int index) {
    return implementsType_.getInt(index);
  }
  private int implementsTypeMemoizedSerializedSize = -1;

  public static final int MEMBER_FIELD_NUMBER = 4;
  private java.util.List<com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo> member_;
  /**
   * <code>repeated .j2cl.MemberInfo member = 4;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo> getMemberList() {
    return member_;
  }
  /**
   * <code>repeated .j2cl.MemberInfo member = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.j2cl.transpiler.backend.libraryinfo.MemberInfoOrBuilder> 
      getMemberOrBuilderList() {
    return member_;
  }
  /**
   * <code>repeated .j2cl.MemberInfo member = 4;</code>
   */
  @java.lang.Override
  public int getMemberCount() {
    return member_.size();
  }
  /**
   * <code>repeated .j2cl.MemberInfo member = 4;</code>
   */
  @java.lang.Override
  public com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo getMember(int index) {
    return member_.get(index);
  }
  /**
   * <code>repeated .j2cl.MemberInfo member = 4;</code>
   */
  @java.lang.Override
  public com.google.j2cl.transpiler.backend.libraryinfo.MemberInfoOrBuilder getMemberOrBuilder(
      int index) {
    return member_.get(index);
  }

  public static final int HEADER_SOURCE_FILE_PATH_FIELD_NUMBER = 5;
  private volatile java.lang.Object headerSourceFilePath_;
  /**
   * <code>string header_source_file_path = 5;</code>
   * @return The headerSourceFilePath.
   */
  @java.lang.Override
  public java.lang.String getHeaderSourceFilePath() {
    java.lang.Object ref = headerSourceFilePath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      headerSourceFilePath_ = s;
      return s;
    }
  }
  /**
   * <code>string header_source_file_path = 5;</code>
   * @return The bytes for headerSourceFilePath.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getHeaderSourceFilePathBytes() {
    java.lang.Object ref = headerSourceFilePath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      headerSourceFilePath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int IMPL_SOURCE_FILE_PATH_FIELD_NUMBER = 6;
  private volatile java.lang.Object implSourceFilePath_;
  /**
   * <code>string impl_source_file_path = 6;</code>
   * @return The implSourceFilePath.
   */
  @java.lang.Override
  public java.lang.String getImplSourceFilePath() {
    java.lang.Object ref = implSourceFilePath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      implSourceFilePath_ = s;
      return s;
    }
  }
  /**
   * <code>string impl_source_file_path = 6;</code>
   * @return The bytes for implSourceFilePath.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getImplSourceFilePathBytes() {
    java.lang.Object ref = implSourceFilePath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      implSourceFilePath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int JSTYPE_INTERFACE_FIELD_NUMBER = 7;
  private boolean jstypeInterface_;
  /**
   * <code>bool jstype_interface = 7;</code>
   * @return The jstypeInterface.
   */
  @java.lang.Override
  public boolean getJstypeInterface() {
    return jstypeInterface_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (typeId_ != 0) {
      output.writeInt32(1, typeId_);
    }
    if (extendsType_ != 0) {
      output.writeInt32(2, extendsType_);
    }
    if (getImplementsTypeList().size() > 0) {
      output.writeUInt32NoTag(26);
      output.writeUInt32NoTag(implementsTypeMemoizedSerializedSize);
    }
    for (int i = 0; i < implementsType_.size(); i++) {
      output.writeInt32NoTag(implementsType_.getInt(i));
    }
    for (int i = 0; i < member_.size(); i++) {
      output.writeMessage(4, member_.get(i));
    }
    if (!getHeaderSourceFilePathBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, headerSourceFilePath_);
    }
    if (!getImplSourceFilePathBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, implSourceFilePath_);
    }
    if (jstypeInterface_ != false) {
      output.writeBool(7, jstypeInterface_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (typeId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, typeId_);
    }
    if (extendsType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, extendsType_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < implementsType_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(implementsType_.getInt(i));
      }
      size += dataSize;
      if (!getImplementsTypeList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      implementsTypeMemoizedSerializedSize = dataSize;
    }
    for (int i = 0; i < member_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, member_.get(i));
    }
    if (!getHeaderSourceFilePathBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, headerSourceFilePath_);
    }
    if (!getImplSourceFilePathBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, implSourceFilePath_);
    }
    if (jstypeInterface_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, jstypeInterface_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo)) {
      return super.equals(obj);
    }
    com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo other = (com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo) obj;

    if (getTypeId()
        != other.getTypeId()) return false;
    if (getExtendsType()
        != other.getExtendsType()) return false;
    if (!getImplementsTypeList()
        .equals(other.getImplementsTypeList())) return false;
    if (!getMemberList()
        .equals(other.getMemberList())) return false;
    if (!getHeaderSourceFilePath()
        .equals(other.getHeaderSourceFilePath())) return false;
    if (!getImplSourceFilePath()
        .equals(other.getImplSourceFilePath())) return false;
    if (getJstypeInterface()
        != other.getJstypeInterface()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TYPE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getTypeId();
    hash = (37 * hash) + EXTENDS_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getExtendsType();
    if (getImplementsTypeCount() > 0) {
      hash = (37 * hash) + IMPLEMENTS_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getImplementsTypeList().hashCode();
    }
    if (getMemberCount() > 0) {
      hash = (37 * hash) + MEMBER_FIELD_NUMBER;
      hash = (53 * hash) + getMemberList().hashCode();
    }
    hash = (37 * hash) + HEADER_SOURCE_FILE_PATH_FIELD_NUMBER;
    hash = (53 * hash) + getHeaderSourceFilePath().hashCode();
    hash = (37 * hash) + IMPL_SOURCE_FILE_PATH_FIELD_NUMBER;
    hash = (53 * hash) + getImplSourceFilePath().hashCode();
    hash = (37 * hash) + JSTYPE_INTERFACE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getJstypeInterface());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code j2cl.TypeInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:j2cl.TypeInfo)
      com.google.j2cl.transpiler.backend.libraryinfo.TypeInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.j2cl.transpiler.backend.libraryinfo.LibraryInfoOuterClass.internal_static_j2cl_TypeInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.j2cl.transpiler.backend.libraryinfo.LibraryInfoOuterClass.internal_static_j2cl_TypeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo.class, com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo.Builder.class);
    }

    // Construct using com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getMemberFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      typeId_ = 0;

      extendsType_ = 0;

      implementsType_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      if (memberBuilder_ == null) {
        member_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        memberBuilder_.clear();
      }
      headerSourceFilePath_ = "";

      implSourceFilePath_ = "";

      jstypeInterface_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.j2cl.transpiler.backend.libraryinfo.LibraryInfoOuterClass.internal_static_j2cl_TypeInfo_descriptor;
    }

    @java.lang.Override
    public com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo getDefaultInstanceForType() {
      return com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo build() {
      com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo buildPartial() {
      com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo result = new com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo(this);
      int from_bitField0_ = bitField0_;
      result.typeId_ = typeId_;
      result.extendsType_ = extendsType_;
      if (((bitField0_ & 0x00000001) != 0)) {
        implementsType_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.implementsType_ = implementsType_;
      if (memberBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          member_ = java.util.Collections.unmodifiableList(member_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.member_ = member_;
      } else {
        result.member_ = memberBuilder_.build();
      }
      result.headerSourceFilePath_ = headerSourceFilePath_;
      result.implSourceFilePath_ = implSourceFilePath_;
      result.jstypeInterface_ = jstypeInterface_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo) {
        return mergeFrom((com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo other) {
      if (other == com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo.getDefaultInstance()) return this;
      if (other.getTypeId() != 0) {
        setTypeId(other.getTypeId());
      }
      if (other.getExtendsType() != 0) {
        setExtendsType(other.getExtendsType());
      }
      if (!other.implementsType_.isEmpty()) {
        if (implementsType_.isEmpty()) {
          implementsType_ = other.implementsType_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureImplementsTypeIsMutable();
          implementsType_.addAll(other.implementsType_);
        }
        onChanged();
      }
      if (memberBuilder_ == null) {
        if (!other.member_.isEmpty()) {
          if (member_.isEmpty()) {
            member_ = other.member_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureMemberIsMutable();
            member_.addAll(other.member_);
          }
          onChanged();
        }
      } else {
        if (!other.member_.isEmpty()) {
          if (memberBuilder_.isEmpty()) {
            memberBuilder_.dispose();
            memberBuilder_ = null;
            member_ = other.member_;
            bitField0_ = (bitField0_ & ~0x00000002);
            memberBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getMemberFieldBuilder() : null;
          } else {
            memberBuilder_.addAllMessages(other.member_);
          }
        }
      }
      if (!other.getHeaderSourceFilePath().isEmpty()) {
        headerSourceFilePath_ = other.headerSourceFilePath_;
        onChanged();
      }
      if (!other.getImplSourceFilePath().isEmpty()) {
        implSourceFilePath_ = other.implSourceFilePath_;
        onChanged();
      }
      if (other.getJstypeInterface() != false) {
        setJstypeInterface(other.getJstypeInterface());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int typeId_ ;
    /**
     * <code>int32 type_id = 1;</code>
     * @return The typeId.
     */
    @java.lang.Override
    public int getTypeId() {
      return typeId_;
    }
    /**
     * <code>int32 type_id = 1;</code>
     * @param value The typeId to set.
     * @return This builder for chaining.
     */
    public Builder setTypeId(int value) {
      
      typeId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 type_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTypeId() {
      
      typeId_ = 0;
      onChanged();
      return this;
    }

    private int extendsType_ ;
    /**
     * <code>int32 extends_type = 2;</code>
     * @return The extendsType.
     */
    @java.lang.Override
    public int getExtendsType() {
      return extendsType_;
    }
    /**
     * <code>int32 extends_type = 2;</code>
     * @param value The extendsType to set.
     * @return This builder for chaining.
     */
    public Builder setExtendsType(int value) {
      
      extendsType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 extends_type = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearExtendsType() {
      
      extendsType_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList implementsType_ = emptyIntList();
    private void ensureImplementsTypeIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        implementsType_ = mutableCopy(implementsType_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <code>repeated int32 implements_type = 3;</code>
     * @return A list containing the implementsType.
     */
    public java.util.List<java.lang.Integer>
        getImplementsTypeList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(implementsType_) : implementsType_;
    }
    /**
     * <code>repeated int32 implements_type = 3;</code>
     * @return The count of implementsType.
     */
    public int getImplementsTypeCount() {
      return implementsType_.size();
    }
    /**
     * <code>repeated int32 implements_type = 3;</code>
     * @param index The index of the element to return.
     * @return The implementsType at the given index.
     */
    public int getImplementsType(int index) {
      return implementsType_.getInt(index);
    }
    /**
     * <code>repeated int32 implements_type = 3;</code>
     * @param index The index to set the value at.
     * @param value The implementsType to set.
     * @return This builder for chaining.
     */
    public Builder setImplementsType(
        int index, int value) {
      ensureImplementsTypeIsMutable();
      implementsType_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 implements_type = 3;</code>
     * @param value The implementsType to add.
     * @return This builder for chaining.
     */
    public Builder addImplementsType(int value) {
      ensureImplementsTypeIsMutable();
      implementsType_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 implements_type = 3;</code>
     * @param values The implementsType to add.
     * @return This builder for chaining.
     */
    public Builder addAllImplementsType(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureImplementsTypeIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, implementsType_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 implements_type = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearImplementsType() {
      implementsType_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    private java.util.List<com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo> member_ =
      java.util.Collections.emptyList();
    private void ensureMemberIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        member_ = new java.util.ArrayList<com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo>(member_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo, com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo.Builder, com.google.j2cl.transpiler.backend.libraryinfo.MemberInfoOrBuilder> memberBuilder_;

    /**
     * <code>repeated .j2cl.MemberInfo member = 4;</code>
     */
    public java.util.List<com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo> getMemberList() {
      if (memberBuilder_ == null) {
        return java.util.Collections.unmodifiableList(member_);
      } else {
        return memberBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .j2cl.MemberInfo member = 4;</code>
     */
    public int getMemberCount() {
      if (memberBuilder_ == null) {
        return member_.size();
      } else {
        return memberBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .j2cl.MemberInfo member = 4;</code>
     */
    public com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo getMember(int index) {
      if (memberBuilder_ == null) {
        return member_.get(index);
      } else {
        return memberBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .j2cl.MemberInfo member = 4;</code>
     */
    public Builder setMember(
        int index, com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo value) {
      if (memberBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMemberIsMutable();
        member_.set(index, value);
        onChanged();
      } else {
        memberBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .j2cl.MemberInfo member = 4;</code>
     */
    public Builder setMember(
        int index, com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo.Builder builderForValue) {
      if (memberBuilder_ == null) {
        ensureMemberIsMutable();
        member_.set(index, builderForValue.build());
        onChanged();
      } else {
        memberBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .j2cl.MemberInfo member = 4;</code>
     */
    public Builder addMember(com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo value) {
      if (memberBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMemberIsMutable();
        member_.add(value);
        onChanged();
      } else {
        memberBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .j2cl.MemberInfo member = 4;</code>
     */
    public Builder addMember(
        int index, com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo value) {
      if (memberBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMemberIsMutable();
        member_.add(index, value);
        onChanged();
      } else {
        memberBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .j2cl.MemberInfo member = 4;</code>
     */
    public Builder addMember(
        com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo.Builder builderForValue) {
      if (memberBuilder_ == null) {
        ensureMemberIsMutable();
        member_.add(builderForValue.build());
        onChanged();
      } else {
        memberBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .j2cl.MemberInfo member = 4;</code>
     */
    public Builder addMember(
        int index, com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo.Builder builderForValue) {
      if (memberBuilder_ == null) {
        ensureMemberIsMutable();
        member_.add(index, builderForValue.build());
        onChanged();
      } else {
        memberBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .j2cl.MemberInfo member = 4;</code>
     */
    public Builder addAllMember(
        java.lang.Iterable<? extends com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo> values) {
      if (memberBuilder_ == null) {
        ensureMemberIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, member_);
        onChanged();
      } else {
        memberBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .j2cl.MemberInfo member = 4;</code>
     */
    public Builder clearMember() {
      if (memberBuilder_ == null) {
        member_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        memberBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .j2cl.MemberInfo member = 4;</code>
     */
    public Builder removeMember(int index) {
      if (memberBuilder_ == null) {
        ensureMemberIsMutable();
        member_.remove(index);
        onChanged();
      } else {
        memberBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .j2cl.MemberInfo member = 4;</code>
     */
    public com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo.Builder getMemberBuilder(
        int index) {
      return getMemberFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .j2cl.MemberInfo member = 4;</code>
     */
    public com.google.j2cl.transpiler.backend.libraryinfo.MemberInfoOrBuilder getMemberOrBuilder(
        int index) {
      if (memberBuilder_ == null) {
        return member_.get(index);  } else {
        return memberBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .j2cl.MemberInfo member = 4;</code>
     */
    public java.util.List<? extends com.google.j2cl.transpiler.backend.libraryinfo.MemberInfoOrBuilder> 
         getMemberOrBuilderList() {
      if (memberBuilder_ != null) {
        return memberBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(member_);
      }
    }
    /**
     * <code>repeated .j2cl.MemberInfo member = 4;</code>
     */
    public com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo.Builder addMemberBuilder() {
      return getMemberFieldBuilder().addBuilder(
          com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .j2cl.MemberInfo member = 4;</code>
     */
    public com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo.Builder addMemberBuilder(
        int index) {
      return getMemberFieldBuilder().addBuilder(
          index, com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .j2cl.MemberInfo member = 4;</code>
     */
    public java.util.List<com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo.Builder> 
         getMemberBuilderList() {
      return getMemberFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo, com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo.Builder, com.google.j2cl.transpiler.backend.libraryinfo.MemberInfoOrBuilder> 
        getMemberFieldBuilder() {
      if (memberBuilder_ == null) {
        memberBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo, com.google.j2cl.transpiler.backend.libraryinfo.MemberInfo.Builder, com.google.j2cl.transpiler.backend.libraryinfo.MemberInfoOrBuilder>(
                member_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        member_ = null;
      }
      return memberBuilder_;
    }

    private java.lang.Object headerSourceFilePath_ = "";
    /**
     * <code>string header_source_file_path = 5;</code>
     * @return The headerSourceFilePath.
     */
    public java.lang.String getHeaderSourceFilePath() {
      java.lang.Object ref = headerSourceFilePath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        headerSourceFilePath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string header_source_file_path = 5;</code>
     * @return The bytes for headerSourceFilePath.
     */
    public com.google.protobuf.ByteString
        getHeaderSourceFilePathBytes() {
      java.lang.Object ref = headerSourceFilePath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        headerSourceFilePath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string header_source_file_path = 5;</code>
     * @param value The headerSourceFilePath to set.
     * @return This builder for chaining.
     */
    public Builder setHeaderSourceFilePath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      headerSourceFilePath_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string header_source_file_path = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearHeaderSourceFilePath() {
      
      headerSourceFilePath_ = getDefaultInstance().getHeaderSourceFilePath();
      onChanged();
      return this;
    }
    /**
     * <code>string header_source_file_path = 5;</code>
     * @param value The bytes for headerSourceFilePath to set.
     * @return This builder for chaining.
     */
    public Builder setHeaderSourceFilePathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      headerSourceFilePath_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object implSourceFilePath_ = "";
    /**
     * <code>string impl_source_file_path = 6;</code>
     * @return The implSourceFilePath.
     */
    public java.lang.String getImplSourceFilePath() {
      java.lang.Object ref = implSourceFilePath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        implSourceFilePath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string impl_source_file_path = 6;</code>
     * @return The bytes for implSourceFilePath.
     */
    public com.google.protobuf.ByteString
        getImplSourceFilePathBytes() {
      java.lang.Object ref = implSourceFilePath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        implSourceFilePath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string impl_source_file_path = 6;</code>
     * @param value The implSourceFilePath to set.
     * @return This builder for chaining.
     */
    public Builder setImplSourceFilePath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      implSourceFilePath_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string impl_source_file_path = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearImplSourceFilePath() {
      
      implSourceFilePath_ = getDefaultInstance().getImplSourceFilePath();
      onChanged();
      return this;
    }
    /**
     * <code>string impl_source_file_path = 6;</code>
     * @param value The bytes for implSourceFilePath to set.
     * @return This builder for chaining.
     */
    public Builder setImplSourceFilePathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      implSourceFilePath_ = value;
      onChanged();
      return this;
    }

    private boolean jstypeInterface_ ;
    /**
     * <code>bool jstype_interface = 7;</code>
     * @return The jstypeInterface.
     */
    @java.lang.Override
    public boolean getJstypeInterface() {
      return jstypeInterface_;
    }
    /**
     * <code>bool jstype_interface = 7;</code>
     * @param value The jstypeInterface to set.
     * @return This builder for chaining.
     */
    public Builder setJstypeInterface(boolean value) {
      
      jstypeInterface_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool jstype_interface = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearJstypeInterface() {
      
      jstypeInterface_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:j2cl.TypeInfo)
  }

  // @@protoc_insertion_point(class_scope:j2cl.TypeInfo)
  private static final com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo();
  }

  public static com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TypeInfo>
      PARSER = new com.google.protobuf.AbstractParser<TypeInfo>() {
    @java.lang.Override
    public TypeInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TypeInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TypeInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TypeInfo> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.j2cl.transpiler.backend.libraryinfo.TypeInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

