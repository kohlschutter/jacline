{
"version":3,
"file":"IntStreamImpl$Empty.impl.java.js",
"lineCount":276,
"mappings":"A;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAqDe,K;;CAAA,W;EAAAA,Q;;;QACJ,4C,8BAA4BC,Q;EAA5BC,gB;EAAAA,4B;EAAAA,2G;EAAAA,iB;;;CAAA,sF,8BAA4BD,Q;EACjCE,qG;;;CAIe,qE,qBAAoBC,S;EACnCC,sD;EACAA,Y;;;CAIe,sE,yBAAqBC,M;EACpCC,sD;EACAA,Y;;;CAImB,mE,uBAAkCD,M;EACrDE,sD;EACAA,+G;;;CAIgB,8E,0BAA4BF,M;EAC5CG,sD;EACAA,+E;;;CAIkB,oF,4BAAgCH,M;EAClDI,sD;EACAA,iF;;;CAIe,qE,uBAAyCJ,M;EACxDK,sD;EACAA,Y;;;CAIe,sC;EACfC,sD;EACAA,Y;;;CAIe,oC;EACfC,sD;EACAA,Y;;;CAIe,kE,oBAAiBC,M;EAChCC,sD;EACAA,Y;;;CAIe,yC,eAAWC,O;EAC1BC,sD;EACAA,wJ;EACAA,Y;;;CAIe,wC,eAAUC,C;EACzBC,sD;EACAA,4I;EACAA,Y;;;CAIU,+C,oBAAoBL,M;EAC9BM,8C;;;CAKU,sD,oBAA2BN,M;EACrCO,8C;;;CAKW,sB;EACXC,8C;EACAA,iE;;;CAIS,wD,eAAWC,Q,2BAA4BC,E;EAChDC,8C;EACAA,gB;;;CAIiB,qE,0BAAyBD,E;EAC1CC,8C;EACAA,oD;;;CAIW,0H,oBACGC,Q,2BAA4BC,W,0BAA8BC,Q;EACxEC,8C;EACAA,0C;;;CAIS,U;EACTC,8C;EACAA,S;;;CAIiB,4B;EACjBC,8C;EACAA,oD;;;CAIiB,4B;EACjBC,8C;EACAA,oD;;;CAIU,a;EACVC,8C;EACAA,wB;;;CAIoB,mC;EACpBC,8C;EACAA,0D;;;CAI0B,mD;EAC1BC,8C;EACAA,wC;;;CAIa,oD,qBAAsB/B,S;EACnCgC,8C;EACAA,a;;;CAIa,oD,qBAAsBhC,S;EACnCiC,8C;EACAA,Y;;;CAIa,qD,qBAAuBjC,S;EACpCkC,8C;EACAA,Y;;;CAIiB,kC;EACjBC,8C;EACAA,oD;;;CAIiB,gC;EACjBC,8C;EACAA,oD;;;CAIgB,2C;EAChBC,sD;EACAA,+E;;;CAIkB,+C;EAClBC,sD;EACAA,iF;;;CAIqB,gC;EACrBC,sD;EACAA,qH;;;CAIe,wC;EACfC,sD;EACAA,Y;;;CAIe,sC;EACfC,sD;EACAA,Y;;;CAI6B,6C;EAC7BC,kJ;;;CAIuB,0C;EACvBC,8C;EACAA,yE;;;CAIa,qB;EACbC,sD;EACAA,a;;;CAIe,uC;EACfC,sD;EACAA,Y;;;;CAlOS,8B;EAAAH,4D;;;;CAAA,0D;EAAAI,6H;;;;CAAA,uC;EAAAL,qD;;;;CAAA,yC;EAAAD,uD;;;;CAAA,oC;EAAAG,yD;;;;CAAA,wC;EAAAE,sD;;;QAAA,O;EAAAE,wB;EAAAA,qB;EAAAA;",
"sources":["IntStreamImpl.java"],
"names":["java.util.stream.IntStreamImpl$Empty.<synthetic: ctor_js>","previous","java.util.stream.IntStreamImpl$Empty.<synthetic: ctor_create>","java.util.stream.IntStreamImpl$Empty.<init>","predicate","java.util.stream.IntStreamImpl$Empty.filter","mapper","java.util.stream.IntStreamImpl$Empty.map","java.util.stream.IntStreamImpl$Empty.mapToObj","java.util.stream.IntStreamImpl$Empty.mapToLong","java.util.stream.IntStreamImpl$Empty.mapToDouble","java.util.stream.IntStreamImpl$Empty.flatMap","java.util.stream.IntStreamImpl$Empty.distinct","java.util.stream.IntStreamImpl$Empty.sorted","action","java.util.stream.IntStreamImpl$Empty.peek","maxSize","java.util.stream.IntStreamImpl$Empty.limit","n","java.util.stream.IntStreamImpl$Empty.skip","java.util.stream.IntStreamImpl$Empty.forEach","java.util.stream.IntStreamImpl$Empty.forEachOrdered","java.util.stream.IntStreamImpl$Empty.toArray","identity","op","java.util.stream.IntStreamImpl$Empty.reduce","supplier","accumulator","combiner","java.util.stream.IntStreamImpl$Empty.collect","java.util.stream.IntStreamImpl$Empty.sum","java.util.stream.IntStreamImpl$Empty.min","java.util.stream.IntStreamImpl$Empty.max","java.util.stream.IntStreamImpl$Empty.count","java.util.stream.IntStreamImpl$Empty.average","java.util.stream.IntStreamImpl$Empty.summaryStatistics","java.util.stream.IntStreamImpl$Empty.anyMatch","java.util.stream.IntStreamImpl$Empty.allMatch","java.util.stream.IntStreamImpl$Empty.noneMatch","java.util.stream.IntStreamImpl$Empty.findFirst","java.util.stream.IntStreamImpl$Empty.findAny","java.util.stream.IntStreamImpl$Empty.asLongStream","java.util.stream.IntStreamImpl$Empty.asDoubleStream","java.util.stream.IntStreamImpl$Empty.boxed","java.util.stream.IntStreamImpl$Empty.sequential","java.util.stream.IntStreamImpl$Empty.parallel","java.util.stream.IntStreamImpl$Empty.iterator","java.util.stream.IntStreamImpl$Empty.spliterator","java.util.stream.IntStreamImpl$Empty.isParallel","java.util.stream.IntStreamImpl$Empty.unordered","java.util.stream.IntStreamImpl$Empty.onClose","java.util.stream.IntStreamImpl$Empty.<clinit>"]
}
