{
"version":3,
"file":"DoubleStreamImpl$Empty.impl.java.js",
"lineCount":264,
"mappings":"A;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAoDe,K;;CAAA,W;EAAAA,Q;;;QACJ,4C,8BAA4BC,Q;EAA5BC,gB;EAAAA,4B;EAAAA,8G;EAAAA,iB;;;CAAA,yF,8BAA4BD,Q;EACjCE,qG;;;CAIkB,2E,wBAAuBC,S;EACzCC,sD;EACAA,Y;;;CAIkB,4E,4BAAwBC,M;EAC1CC,sD;EACAA,Y;;;CAImB,sE,0BAAqCD,M;EACxDE,sD;EACAA,+G;;;CAIe,8E,4BAA6BF,M;EAC5CG,sD;EACAA,8E;;;CAIgB,iF,6BAA+BH,M;EAC/CI,sD;EACAA,+E;;;CAIkB,2E,0BAA+CJ,M;EACjEK,sD;EACAA,Y;;;CAIkB,yC;EAClBC,sD;EACAA,Y;;;CAIkB,uC;EAClBC,sD;EACAA,Y;;;CAIkB,wE,uBAAoBC,M;EACtCC,sD;EACAA,Y;;;CAIkB,4C,eAAWC,O;EAC7BC,sD;EACAA,wJ;EACAA,Y;;;CAIkB,2C,eAAUC,C;EAC5BC,sD;EACAA,4I;EACAA,Y;;;CAIU,kD,uBAAuBL,M;EACjCM,8C;;;CAKU,yD,uBAA8BN,M;EACxCO,8C;;;CAKc,yB;EACdC,8C;EACAA,oE;;;CAIY,iE,eAAcC,Q,8BAA+BC,E;EACzDC,8C;EACAA,gB;;;CAIoB,2E,6BAA4BD,E;EAChDC,8C;EACAA,0D;;;CAIW,6H,oBACGC,Q,8BAA+BC,W,0BAA8BC,Q;EAC3EC,8C;EACAA,0C;;;CAIY,a;EACZC,8C;EACAA,S;;;CAIoB,+B;EACpBC,8C;EACAA,0D;;;CAIoB,+B;EACpBC,8C;EACAA,0D;;;CAIU,a;EACVC,8C;EACAA,wB;;;CAIoB,mC;EACpBC,8C;EACAA,0D;;;CAI6B,sD;EAC7BC,8C;EACAA,2C;;;CAIa,uD,wBAAyB/B,S;EACtCgC,8C;EACAA,a;;;CAIa,uD,wBAAyBhC,S;EACtCiC,8C;EACAA,Y;;;CAIa,wD,wBAA0BjC,S;EACvCkC,8C;EACAA,Y;;;CAIoB,qC;EACpBC,8C;EACAA,0D;;;CAIoB,mC;EACpBC,8C;EACAA,0D;;;CAIoB,gC;EACpBC,sD;EACAA,qH;;;CAIkB,2C;EAClBC,sD;EACAA,Y;;;CAIkB,yC;EAClBC,sD;EACAA,Y;;;CAIgC,gD;EAChCC,2J;;;CAI0B,6C;EAC1BC,8C;EACAA,+E;;;CAIa,qB;EACbC,sD;EACAA,a;;;CAIkB,0C;EAClBC,sD;EACAA,Y;;;;CAtNS,8B;EAAAH,+D;;;;CAAA,0D;EAAAI,6H;;;;CAAA,uC;EAAAL,wD;;;;CAAA,yC;EAAAD,0D;;;;CAAA,oC;EAAAG,4D;;;;CAAA,wC;EAAAE,yD;;;QAAA,O;EAAAE,wB;EAAAA,qB;EAAAA;",
"sources":["DoubleStreamImpl.java"],
"names":["java.util.stream.DoubleStreamImpl$Empty.<synthetic: ctor_js>","previous","java.util.stream.DoubleStreamImpl$Empty.<synthetic: ctor_create>","java.util.stream.DoubleStreamImpl$Empty.<init>","predicate","java.util.stream.DoubleStreamImpl$Empty.filter","mapper","java.util.stream.DoubleStreamImpl$Empty.map","java.util.stream.DoubleStreamImpl$Empty.mapToObj","java.util.stream.DoubleStreamImpl$Empty.mapToInt","java.util.stream.DoubleStreamImpl$Empty.mapToLong","java.util.stream.DoubleStreamImpl$Empty.flatMap","java.util.stream.DoubleStreamImpl$Empty.distinct","java.util.stream.DoubleStreamImpl$Empty.sorted","action","java.util.stream.DoubleStreamImpl$Empty.peek","maxSize","java.util.stream.DoubleStreamImpl$Empty.limit","n","java.util.stream.DoubleStreamImpl$Empty.skip","java.util.stream.DoubleStreamImpl$Empty.forEach","java.util.stream.DoubleStreamImpl$Empty.forEachOrdered","java.util.stream.DoubleStreamImpl$Empty.toArray","identity","op","java.util.stream.DoubleStreamImpl$Empty.reduce","supplier","accumulator","combiner","java.util.stream.DoubleStreamImpl$Empty.collect","java.util.stream.DoubleStreamImpl$Empty.sum","java.util.stream.DoubleStreamImpl$Empty.min","java.util.stream.DoubleStreamImpl$Empty.max","java.util.stream.DoubleStreamImpl$Empty.count","java.util.stream.DoubleStreamImpl$Empty.average","java.util.stream.DoubleStreamImpl$Empty.summaryStatistics","java.util.stream.DoubleStreamImpl$Empty.anyMatch","java.util.stream.DoubleStreamImpl$Empty.allMatch","java.util.stream.DoubleStreamImpl$Empty.noneMatch","java.util.stream.DoubleStreamImpl$Empty.findFirst","java.util.stream.DoubleStreamImpl$Empty.findAny","java.util.stream.DoubleStreamImpl$Empty.boxed","java.util.stream.DoubleStreamImpl$Empty.sequential","java.util.stream.DoubleStreamImpl$Empty.parallel","java.util.stream.DoubleStreamImpl$Empty.iterator","java.util.stream.DoubleStreamImpl$Empty.spliterator","java.util.stream.DoubleStreamImpl$Empty.isParallel","java.util.stream.DoubleStreamImpl$Empty.unordered","java.util.stream.DoubleStreamImpl$Empty.onClose","java.util.stream.DoubleStreamImpl$Empty.<clinit>"]
}
