{
"version":3,
"file":"StreamImpl$Empty.impl.java.js",
"lineCount":274,
"mappings":"A;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAwDe,K;;CAAA,W;EAAAA,Q;;;QAEJ,4C,8BAA4BC,Q;EAA5BC,gB;EAAAA,4B;EAAAA,wG;EAAAA,iB;;;CAAA,mF,8BAA4BD,Q;EACjCE,qG;;;CAIe,+D,qBAA4BC,S;EAC3CC,sD;EACAA,Y;;;CAImB,2D,oCAAqCC,M;EACxDC,sD;EACAA,mC;;;CAIe,wE,yBAAkCD,M;EACjDE,sD;EACAA,8E;;;CAIgB,2E,0BAAoCF,M;EACpDG,sD;EACAA,+E;;;CAIkB,iF,4BAAwCH,M;EAC1DI,sD;EACAA,iF;;;CAImB,+D,oCAA2DJ,M;EAC9EK,sD;EACAA,mC;;;CAIe,uE,oCAAsDL,M;EACrEM,sD;EACAA,8E;;;CAIgB,yE,oCAAwDN,M;EACxEO,sD;EACAA,+E;;;CAIkB,6E,oCAA4DP,M;EAC9EQ,sD;EACAA,iF;;;CAIe,mC;EACfC,sD;EACAA,Y;;;CAIe,iC;EACfC,sD;EACAA,Y;;;CAIe,uD,sBAA6BC,U;EAC5CD,sD;EACAA,Y;;;CAIe,4D,oBAAyBE,M;EACxCC,sD;EACAA,Y;;;CAIe,sC,eAAWC,O;EAC1BC,sD;EACAA,wJ;EACAA,Y;;;CAIe,qC,eAAUC,C;EACzBC,sD;EACAA,4I;EACAA,Y;;;CAIU,4C,oBAA4BL,M;EACtCM,8C;;;CAKU,mD,oBAAmCN,M;EAC7CO,8C;;;CAKc,mC;EACdC,8C;EACAA,oB;;;CAIa,mE,8BAAyBC,S;EACtCD,8C;EACAA,2G;;;CAIO,+E,UAASE,Q,2BAA4BC,W;EAC5CC,8C;EACAA,gB;;;CAIiB,+D,0BAAyBD,W;EAC1CC,8C;EACAA,yE;;;CAIW,8G,UACPF,Q,6BAAsCC,W,2BAA+BE,Q;EACzED,8C;EACAA,gB;;;CAIW,sH,oBACGE,Q,0BAAmCH,W,0BAA8BE,Q;EAC/EE,8C;EACAA,0C;;;CAIc,uD,2BAAmCC,S;EACjDD,8C;EACAA,sL;;;CAIiB,+C,sBAA0BhB,U;EAC3CkB,8C;EACAA,yE;;;CAIiB,+C,sBAA0BlB,U;EAC3CmB,8C;EACAA,yE;;;CAIU,a;EACVC,8C;EACAA,wB;;;CAIa,iD,qBAA8BjC,S;EAC3CkC,8C;EACAA,a;;;CAIa,iD,qBAA8BlC,S;EAC3CmC,8C;EACAA,Y;;;CAIa,kD,qBAA+BnC,S;EAC5CoC,8C;EACAA,Y;;;CAIiB,+B;EACjBC,8C;EACAA,yE;;;CAIiB,6B;EACjBC,8C;EACAA,yE;;;CAIiB,8B;EACjBC,8C;EACAA,oF;;;CAIoB,oC;EACpBC,8C;EACAA,8F;;;CAIa,qB;EACbC,sD;EACAA,a;;;CAIe,qC;EACfC,sD;EACAA,Y;;;CAIe,mC;EACfC,sD;EACAA,Y;;;CAIe,oC;EACfC,sD;EACAA,Y;;;;CA3OS,0D;EAAAC,gI;;;;CAAA,uC;EAAAF,kD;;;;CAAA,yC;EAAAD,oD;;;;CAAA,wC;EAAAE,mD;;;QAAA,O;EAAAE,wB;EAAAA,qB;EAAAA;",
"sources":["StreamImpl.java"],
"names":["java.util.stream.StreamImpl$Empty.<synthetic: ctor_js>","previous","java.util.stream.StreamImpl$Empty.<synthetic: ctor_create>","java.util.stream.StreamImpl$Empty.<init>","predicate","java.util.stream.StreamImpl$Empty.filter","mapper","java.util.stream.StreamImpl$Empty.map","java.util.stream.StreamImpl$Empty.mapToInt","java.util.stream.StreamImpl$Empty.mapToLong","java.util.stream.StreamImpl$Empty.mapToDouble","java.util.stream.StreamImpl$Empty.flatMap","java.util.stream.StreamImpl$Empty.flatMapToInt","java.util.stream.StreamImpl$Empty.flatMapToLong","java.util.stream.StreamImpl$Empty.flatMapToDouble","java.util.stream.StreamImpl$Empty.distinct","java.util.stream.StreamImpl$Empty.sorted","comparator","action","java.util.stream.StreamImpl$Empty.peek","maxSize","java.util.stream.StreamImpl$Empty.limit","n","java.util.stream.StreamImpl$Empty.skip","java.util.stream.StreamImpl$Empty.forEach","java.util.stream.StreamImpl$Empty.forEachOrdered","java.util.stream.StreamImpl$Empty.toArray","generator","identity","accumulator","java.util.stream.StreamImpl$Empty.reduce","combiner","supplier","java.util.stream.StreamImpl$Empty.collect","collector","java.util.stream.StreamImpl$Empty.min","java.util.stream.StreamImpl$Empty.max","java.util.stream.StreamImpl$Empty.count","java.util.stream.StreamImpl$Empty.anyMatch","java.util.stream.StreamImpl$Empty.allMatch","java.util.stream.StreamImpl$Empty.noneMatch","java.util.stream.StreamImpl$Empty.findFirst","java.util.stream.StreamImpl$Empty.findAny","java.util.stream.StreamImpl$Empty.iterator","java.util.stream.StreamImpl$Empty.spliterator","java.util.stream.StreamImpl$Empty.isParallel","java.util.stream.StreamImpl$Empty.sequential","java.util.stream.StreamImpl$Empty.parallel","java.util.stream.StreamImpl$Empty.unordered","java.util.stream.StreamImpl$Empty.onClose","java.util.stream.StreamImpl$Empty.<clinit>"]
}
